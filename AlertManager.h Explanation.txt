AlertManager.h Explanation
----------------------------

Purpose:
- Declares the AlertManager class responsible for managing, displaying, and saving alerts generated by the IDS system.

Classes and Structures:
- Class: AlertManager
  - Handles a collection of Alert objects.
  - Manages concurrency using a mutex to prevent race conditions.

Important Data Members:
- std::vector<Alert> alerts:
  - Stores all Alert objects detected during the session.
- mutable std::mutex alertMutex:
  - Synchronizes access to the alerts vector to prevent concurrent modification issues.

Important Methods:
- void logAlert(const Alert& alert):
  - Adds an Alert object to the internal list and logs it into a file (alerts.log).
- void showAlerts() const:
  - Prints all current alerts to the console in a readable format.
- void clearAlerts():
  - Clears the internal alert list, effectively resetting the alert state.

Object-Oriented Principles Used:
- **Encapsulation**:
  - The alerts list is private.
  - Access is managed only through controlled public methods.
- **Abstraction**:
  - The complexity of saving alerts and handling threading is hidden behind simple method calls (logAlert, showAlerts, clearAlerts).
- **Concurrency and Thread Safety**:
  - Uses `std::mutex` to lock critical sections when accessing shared data (alerts vector).

Connections to Other Modules:
- SignatureAnalyzer.cpp and AnomalyAnalyzer.cpp call logAlert() to record alerts when threats are detected.
- IDS.cpp calls showAlerts() to display all current alerts to the user.
- Main.cpp offers the user menu options to view or clear alerts.
