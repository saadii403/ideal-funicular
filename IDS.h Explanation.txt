IDS.h Explanation
-------------------

Purpose:
- Declares the IDS (Intrusion Detection System) class, which manages the overall packet capturing, analysis, and alerting workflow.

Classes and Structures:
- Class: IDS
  - Central class that ties together packet parsing, analyzers, and alert management.

Important Data Members:
- std::vector<std::unique_ptr<Analyzer>> analyzers:
  - Stores all analyzers (SignatureAnalyzer, AnomalyAnalyzer) dynamically.
- AlertManager alertManager:
  - Manages saving, displaying, and clearing alerts.
- FirewallManager firewall:
  - Manages blocking detected attacker IPs.

Important Methods:
- IDS():
  - Constructor. Initializes and registers analyzers.
- void addAnalyzer(std::unique_ptr<Analyzer> analyzer):
  - Adds a new analyzer to the internal analyzers list.
- void analyzePacket(const Packet& packet):
  - Passes a packet to all registered analyzers for inspection.
- void loadPcapFile(const std::string& filename):
  - Loads packets from a saved PCAP file for offline analysis.
- void startLiveCapture(const std::string& interfaceName):
  - Captures real-time packets from the selected network interface.
- void showAlerts() const:
  - Displays all recorded alerts.
- void clearAlerts():
  - Clears all saved alerts.

Private Methods:
- void parsePcapPacket(const struct pcap_pkthdr* header, const u_char* data):
  - Parses low-level packet data into a Packet object.

Object-Oriented Principles Used:
- **Encapsulation**:
  - Internal workings (alertManager, analyzers list) are private.
- **Abstraction**:
  - High-level methods (startLiveCapture, loadPcapFile) hide all packet parsing complexity.
- **Polymorphism**:
  - Analyzers are managed via Analyzer* pointers, enabling dynamic analyzer behavior.

Connections to Other Modules:
- Central controller that uses:
  - Packet class (for individual packet representation),
  - Analyzers (SignatureAnalyzer, AnomalyAnalyzer),
  - AlertManager (for alerts),
  - FirewallManager (for blocking attackers).
