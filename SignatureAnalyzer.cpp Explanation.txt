SignatureAnalyzer.cpp Explanation
-----------------------------------

Purpose:
- Implements the methods declared in SignatureAnalyzer.h to detect attacks based on known bad IPs and ports.

Functions Implemented:
- SignatureAnalyzer::SignatureAnalyzer(AlertManager& alertMgr, FirewallManager& fwMgr):
  - Constructor that initializes internal managers and loads static signatures.

- void SignatureAnalyzer::loadSignatures():
  - Loads hardcoded lists of blacklisted IPs and suspicious ports into internal sets.

- void SignatureAnalyzer::analyze(const Packet& packet):
  - Checks if the source IP is blacklisted.
  - Checks if the destination port is considered suspicious.
  - If a match is found:
    - Logs an Alert via AlertManager.
    - Optionally blocks the attacker IP via FirewallManager.
    - Enhances the alert with country name using GeoIPResolver.

- std::string SignatureAnalyzer::getName() const:
  - Returns the name of the analyzer ("Signature-Based Analyzer").

Object-Oriented Principles Used:
- **Inheritance**:
  - Extends the Analyzer abstract class.
- **Polymorphism**:
  - Implements the virtual analyze() method differently compared to AnomalyAnalyzer.
- **Encapsulation**:
  - Keeps blacklist sets and detection logic private.
- **Abstraction**:
  - Users of this class donâ€™t see how detection happens internally.

Connections to Other Modules:
- Used by IDS.cpp to analyze every incoming packet.
- Works closely with AlertManager (for alerts) and FirewallManager (for blocking attackers).
- GeoIPResolver adds location awareness to detection.
