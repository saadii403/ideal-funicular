AnomalyAnalyzer.cpp Explanation
----------------------------------

Purpose:
- Implements the methods declared in AnomalyAnalyzer.h to detect anomalies in network traffic behavior.

Functions Implemented:
- AnomalyAnalyzer::AnomalyAnalyzer(AlertManager& alertMgr, FirewallManager& fwMgr):
  - Constructor that initializes references to AlertManager and FirewallManager.

- void AnomalyAnalyzer::analyze(const Packet& packet):
  - Analyzes each packet for three types of anomalies:
    - Packet Flood Detection
    - Port Scanning Detection
    - Large Packet Detection

- void AnomalyAnalyzer::detectFlood(const Packet& packet):
  - Increments packet count from source IP.
  - If the count exceeds floodThreshold, raises an alert and blocks the IP.

- void AnomalyAnalyzer::detectPortScan(const Packet& packet):
  - Records the destination ports accessed by each IP.
  - If an IP accesses more than portScanThreshold different ports, raises an alert and blocks it.

- void AnomalyAnalyzer::detectLargePacket(const Packet& packet):
  - If packet size exceeds largePacketSize, raises an alert and blocks the sender IP.

- std::string AnomalyAnalyzer::getName() const:
  - Returns the name of this analyzer.

Object-Oriented Principles Used:
- **Inheritance**:
  - Inherits from the Analyzer base class.
- **Polymorphism**:
  - Provides its own analyze() logic different from SignatureAnalyzer.
- **Encapsulation**:
  - Internal counting logic and thresholds are hidden inside the class.
- **Abstraction**:
  - Exposes a clean analyze() interface while hiding detection internals.

Connections to Other Modules:
- IDS.cpp uses this analyzer on each packet.
- Detected anomalies generate alerts through AlertManager.
- Malicious IPs are blocked dynamically using FirewallManager.
- GeoIPResolver is used to add geographic information to alerts.
